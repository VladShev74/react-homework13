{"version":3,"sources":["FeedbackManager/FeedbackOptions.jsx","FeedbackManager/Statistics.jsx","FeedbackManager/Section.jsx","App.js","index.js"],"names":["FeedbackOptions","this","props","handleGood","handleNeutral","handleBad","onClick","style","marginRight","Component","Statistics","good","neutral","bad","total","positivePercentage","Section","state","handleGoodFeedback","setState","prevState","countTotalFeedback","handleNeutralFeedback","handleBadFeedback","countPositiveFeedbackPercentage","Math","round","App","ReactDOM","render","document","getElementById"],"mappings":"gMAEqBA,E,4JACjB,WACI,MAA+CC,KAAKC,MAA7CC,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,cAAeC,EAAlC,EAAkCA,UAClC,OACI,8BACI,gCACI,wBAAQC,QAASH,EAAYI,MAAO,CAACC,YAAa,QAAlD,kBACA,wBAAQF,QAASF,EAAeG,MAAO,CAACC,YAAa,QAArD,qBACA,wBAAQF,QAASD,EAAjB,0B,GARyBI,aCAxBC,E,4JACjB,WACI,MAA0DT,KAAKC,MAAvDS,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBACnC,OACI,8BACe,IAAVD,EAAc,sDACX,gCACA,4CACA,uCAAUH,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,sDAAyBC,EAAzB,gB,GAZoBN,aCEnBO,E,4MACjBC,MAAQ,CACJN,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,G,EAGxBG,mBAAqB,WACjB,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC1BT,KAAMS,EAAUT,KAAO,MAE3B,EAAKU,sB,EAGTC,sBAAwB,WACpB,EAAKH,UAAS,SAACC,GAAD,MAAgB,CAC1BR,QAASQ,EAAUR,QAAU,MAEjC,EAAKS,sB,EAGTE,kBAAoB,WAChB,EAAKJ,UAAS,SAACC,GAAD,MAAgB,CAC1BP,IAAKO,EAAUP,IAAM,MAEzB,EAAKQ,sB,EAGTA,mBAAqB,WACjB,EAAKF,UAAS,SAACC,GAAD,MAAgB,CAC1BN,MAAOM,EAAUN,MAAQ,MAE7B,EAAKU,mC,EAGTA,gCAAkC,WAC9B,EAAKL,SAAS,CACVJ,mBAAoBU,KAAKC,MAAwB,IAAlB,EAAKT,MAAMN,KAAY,EAAKM,MAAMH,U,4CAIzE,WACI,MAA0Db,KAAKgB,MAAvDN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBACnC,OACI,gCACI,uDACA,cAAC,EAAD,CAAiBZ,WAAYF,KAAKiB,mBAAoBd,cAAeH,KAAKqB,sBAAuBjB,UAAWJ,KAAKsB,oBACjH,cAAC,EAAD,CAAYZ,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAOA,EAAOC,mBAAoBA,W,GAjDjEN,aCDtB,SAASkB,IACpB,OACI,8BACI,cAAC,EAAD,MCFZC,IAASC,OAAO,cAACF,EAAD,IAASG,SAASC,eAAe,W","file":"static/js/main.74464ab9.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class FeedbackOptions extends Component {\r\n    render() {\r\n        const {handleGood, handleNeutral, handleBad} = this.props;\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <button onClick={handleGood} style={{marginRight: \"10px\"}}>Good</button>\r\n                    <button onClick={handleNeutral} style={{marginRight: \"10px\"}}>Neutral</button>\r\n                    <button onClick={handleBad}>Bad</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Statistics extends Component {\r\n    render() {\r\n        const { good, neutral, bad, total, positivePercentage } = this.props;\r\n        return (\r\n            <div>\r\n                {total === 0 ? <p>No feedback was given</p> : (\r\n                    <div>\r\n                    <h2>Statistics</h2>\r\n                    <p>Good: {good}</p>\r\n                    <p>Neutral: {neutral}</p>\r\n                    <p>Bad: {bad}</p>\r\n                    <p>Total: {total}</p>\r\n                    <p>Positive Percenrage: {positivePercentage}%</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport FeedbackOptions from './FeedbackOptions';\r\nimport Statistics from './Statistics';\r\n\r\nexport default class Section extends Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n        total: 0,\r\n        positivePercentage: 0,\r\n    }\r\n\r\n    handleGoodFeedback = () => {\r\n        this.setState((prevState) => ({\r\n            good: prevState.good + 1,\r\n        }));\r\n        this.countTotalFeedback()\r\n    };\r\n\r\n    handleNeutralFeedback = () => {\r\n        this.setState((prevState) => ({\r\n            neutral: prevState.neutral + 1,\r\n        }));\r\n        this.countTotalFeedback()\r\n    };\r\n\r\n    handleBadFeedback = () => {\r\n        this.setState((prevState) => ({\r\n            bad: prevState.bad + 1,\r\n        }));\r\n        this.countTotalFeedback()\r\n    };\r\n\r\n    countTotalFeedback = () => {\r\n        this.setState((prevState) => ({\r\n            total: prevState.total + 1,\r\n        }));\r\n        this.countPositiveFeedbackPercentage()\r\n    };\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        this.setState({\r\n            positivePercentage: Math.round(this.state.good * 100/ this.state.total)\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { good, neutral, bad, total, positivePercentage } = this.state; \r\n        return (\r\n            <div>\r\n                <h1>Please leave feedback</h1>\r\n                <FeedbackOptions handleGood={this.handleGoodFeedback} handleNeutral={this.handleNeutralFeedback} handleBad={this.handleBadFeedback}/>\r\n                <Statistics good={good} neutral={neutral} bad={bad} total={total} positivePercentage={positivePercentage} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\nimport Section from './FeedbackManager/Section';\n\nexport default function App() {\n    return (\n        <div>\n            <Section />\n        </div>\n    )\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}